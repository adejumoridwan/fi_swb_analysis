



```{r}
women <- read.csv("datasets/wm.csv") |> 
  mutate(SN = row_number())
imputed <- read.csv("datasets/mics.csv")|> 
  mutate(SN = row_number())
```

```{r}
skimr::skim(women)
```

```{r}

# Not Missing: Rows where all specified columns are complete
not_missing <- women |> 
  drop_na(FN1A:FN5, LS1:LS4) |> 
  select(SN, WB4) |> 
  left_join(imputed, by = "SN")

# Missing: The opposite of `not_missing`
missing <- women |> 
  anti_join(not_missing, by = "SN") |>  # Keep rows not in `not_missing`
  select(SN, WB4) |> 
  left_join(imputed, by = "SN")

```

```{r}
skimr::skim(not_missing)
```


```{r}
skimr::skim(missing)

```



```{r}
missing_percentage <- function(data) {
  total_missing <- sum(is.na(data))  # Count total missing values
  total_values <- prod(dim(data))    # Total number of values in the dataset
  percentage <- (total_missing / total_values) * 100  # Compute percentage
  return(percentage)
}
missing_percentage(non_imputed)
```

```{r}
analyze_missing_data <- function(VAR) {
    # Summarizing counts for the specified variable
    not_mis <- not_missing |> 
  group_by(.data[[VAR]]) |> 
  summarize(count = n(), .groups = "drop") |> 
  mutate(percentage = count / sum(count) * 100)

mis <- missing |> 
  group_by(.data[[VAR]]) |> 
  summarize(count = n(), .groups = "drop") |> 
  mutate(percentage = count / sum(count) * 100)

    
    # Adding missing status labels
    not_mis$missing_status <- "not_missing"
    mis$missing_status <- "missing"
    
    # Combining datasets
    combined_data <- rbind(not_mis, mis)
    
    # Creating formula dynamically
formula_str <- paste("count ~", VAR, "+ missing_status")
contingency_table <- xtabs(as.formula(formula_str), data = combined_data)

    
    # Performing chi-square test
    chi_square_result <- chisq.test(contingency_table)
    
    # Printing results
    print(not_mis)
    print(mis)
    print(chi_square_result)
}
```

```{r}
analyze_missing_data("welevel")
analyze_missing_data("windex5")
analyze_missing_data("WM14")
analyze_missing_data("MSTATUS")
analyze_missing_data("WB18")
t.test(not_missing$WB4,missing$WB4)
```


```{r}
not_mis <- not_missing |> 
  group_by(windex5) |> 
  summarize(count = n())

mis <- missing |> 
  group_by(windex5) |> 
  summarize(count = n())

not_mis$missing_status <- "not_missing"
mis$missing_status <- "missing"

combined_data <- rbind(not_mis, mis)

contingency_table <- xtabs(count ~  + missing_status, data = combined_data)
chi_square_result <- chisq.test(contingency_table)

print(chi_square_result)

```




```{r}
skimr::skim(non_imputed)
```

```{r}
skimr::skim(imputed)
```

```{r}
# Function to perform t-test before and after imputation
t_test_missing_vs_imputed <- function(original_data) {
  # Impute missing values using mice (multiple imputation, taking first completed dataset)
  imputed_data <- imputed
  
  # Initialize a list to store results
  results <- list()
  
  # Perform t-test for each column
  for (col in colnames(original_data)) {
    if (is.numeric(original_data[[col]])) {
      # Extract non-missing values from original data
      original_values <- original_data[[col]]
      imputed_values <- imputed_data[[col]]
      
      # Perform t-test
      t_test_result <- t.test(original_values, imputed_values)
      
      # Store results
      results[[col]] <- t_test_result
    }
  }
  
  return(results)
}

t_test_missing_vs_imputed(non_imputed)
```

